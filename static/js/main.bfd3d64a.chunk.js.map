{"version":3,"sources":["icons/search.svg","icons/abstract-searching.png","icons/book-of-black-cover-closed.svg","icons/dashboard.svg","icons/menu.svg","icons/clip-education.png","icons/clip-bad-gateaway.png","components/Navigation.js","components/Home/sectionControl.js","components/Button.js","components/bookCard.js","components/Home/BookList.js","components/Home/bookShelf.js","components/Home/home.js","utils/BooksAPI.js","components/Home/homeLoader.js","components/Search/search.js","components/shelf/shelfButton.js","components/shelf/shelf.js","components/Content.js","components/App.js","index.js"],"names":["module","exports","Navigation","props","toggleMenuIcon","document","querySelector","classList","toggle","handleMenue","window","onclick","event","target","matches","console","log","myDropdown","contains","remove","discoverNavItem","name","img","Dashboard","Search","shelfNavItem","book","addEventListener","this","removeEventListener","className","src","menuIcon","alt","onClick","map","item","key","exact","to","toLowerCase","activeClassName","href","split","join","Component","SectionControl","sectionName","numOfbook","shelf","Button","handleButtonClick","nextSibling","handleChoice","innerText","handleButtonChoice","handleDropDownMenue","i","dropdowns","getElementsByClassName","length","openDropdown","choices","choice","BookCard","handleBookChange","id","cards","querySelectorAll","card","textContent","includes","bookName","bookAuthor","style","opacity","bookImg","author","total","rating","avgRate","interactive","BookList","bookID","handleChangeBookShelf","Swiper","slidesPerView","spaceBetween","nextEl","prevEl","books","title","authors","imageLinks","thumbnail","averageRating","BookShelf","shelfName","bookId","ChangeBookShelf","Home","currentlyReadingBooks","filter","readBooks","wantToReadBooks","updateBookShelf","api","token","localStorage","Math","random","toString","substr","headers","get","fetch","then","res","json","data","search","query","method","body","JSON","stringify","HomeLoader","height","x","y","rx","ry","width","state","requestError","handleUserInput","setState","getBooks","a","async","BookAPI","response","changeBookState","requestState","requestBook","value","error","getBookShelf","BookId","booksOntheShelf","type","placeholder","onChange","searchIcon","searchImg","searchError","BookError","ShelfButton","handleDropDownMenues","catagory","catagories","Shelf","handleCatagoryChange","changeCatagoryState","showBooksByCatagory","categoriesedBooks","categories","push","handleUserChoice","shelfCatagories","cat","index","indexOf","numOfBooks","Content","getAllBooks","hasContent","getBook","BooksAPI","updateBook","getShelfBooks","path","render","App","ReactDOM","basename","process","getElementById"],"mappings":"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","file":"static/js/main.bfd3d64a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.2ea4c436.svg\";","module.exports = __webpack_public_path__ + \"static/media/abstract-searching.c25f4472.png\";","module.exports = __webpack_public_path__ + \"static/media/book-of-black-cover-closed.6705a44b.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.7217f10c.svg\";","module.exports = __webpack_public_path__ + \"static/media/menu.4aaf92d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/clip-education.a9765fb4.png\";","module.exports = __webpack_public_path__ + \"static/media/clip-bad-gateaway.b731be81.png\";","import React, { Component } from 'react'\nimport '../styles/navigation.scss'\nimport Search from '../icons/search.svg'\nimport Dashboard from '../icons/dashboard.svg'\nimport book from '../icons/book-of-black-cover-closed.svg'\nimport { NavLink } from 'react-router-dom'\nimport menuIcon from '../icons/menu.svg'\n\nclass Navigation extends Component {\n    constructor(props){\n        super(props);\n        this.discoverNavItem = [{name:'Home', img:Dashboard},{name:'Search', img:Search}];\n        this.shelfNavItem = [{name:'Currently-reading', img:book},{name:'Want-to-read', img:book},{name:'Read', img:book}];\n    }\n    toggleMenuIcon = () =>{\n        const sidenav = document.querySelector(\".sidenav\");\n        sidenav.classList.toggle('showMenu')\n    }\n\n    handleMenue = () => {\n        window.onclick = function(event) {\n            if (!event.target.matches('.menuIcon')) {\n                console.log(event.target.classList);\n                \n                var myDropdown = document.querySelector(\".sidenav\");\n                  if (myDropdown.classList.contains('showMenu')) {\n                    myDropdown.classList.remove('showMenu');\n                  }\n                }\n        }\n    }\n\n    componentDidMount(){\n        document.addEventListener('click', this.handleMenue);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('click', this.handleMenue);\n    }\n\n    render(){\n        return(\n            <div className=\"nav-container\">\n                <h2 className=\"heading\">my<span>reads</span></h2>\n                <img className=\"menuIcon\" src={menuIcon} alt=\"menu icon\" onClick={this.toggleMenuIcon}></img>\n                <div className=\"sidenav\">\n                    <div className=\"sidenav-section\">\n                        <p>Discover</p>\n                        {\n                            this.discoverNavItem.map((item) => (\n                                <NavLink \n                                    key={item.name} \n                                    exact to={item.name === \"Home\" ? '/'  : `/${item.name.toLowerCase()}`} \n                                    className=\"sidenav-item\"\n                                    activeClassName=\"sidenav-item__active\"\n                                    >\n                                    <img className=\"sidenav-item-img\" src={item.img} name={item.name} alt={item.name}></img>\n                                    <span className=\"sidenav-item-text\" name={item.name}>{item.name}</span>\n                                </NavLink>\n                            ))\n                        }\n                    </div>\n                    <div className=\"sidenav-section\">\n                        <p>Bookshelf</p>\n                        {\n                            this.shelfNavItem.map((item) => (\n                                <NavLink \n                                    key={item.name} \n                                    to={`/${item.name.toLowerCase()}`} \n                                    className=\"sidenav-item\"\n                                    activeClassName=\"sidenav-item__active\"\n                                    >\n                                    <img className=\"sidenav-item-img\" src={item.img} alt={item.name}></img>\n                                    <span className=\"sidenav-item-text\" href=\"#\">{item.name.split('-').join(\" \")}</span>\n                                </NavLink>\n                            ))\n                        }\n                    </div>          \n                </div>\n            </div>\n        );\n    }\n    \n}\n\nexport default Navigation;","import React from 'react';\nimport PropTypes from 'prop-types'\nimport '../../styles/dashboard.scss'\n\nconst SectionControl =(props) => {\n        return(\n            <div className=\"control-section\">\n                <div className=\"control-section-text\">\n                    <h1>{props.sectionName}</h1>\n                    <span className=\"control-section-text__books-num\">{props.numOfbook}</span>\n                </div>\n                <div className=\"control-section-action\">\n                    <div className={`control-section-action__back--${props.shelf}`}></div>\n                    <div className={`control-section-action__next--${props.shelf}`}></div>\n                </div>\n            </div>\n        )\n}\n\nSectionControl.propTypes = {\n    sectionName:PropTypes.string.isRequired,\n    numOfbook:PropTypes.number.isRequired,\n    shelf:PropTypes.string,\n}\n\nexport default SectionControl;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/dashboard.scss';\n\n\nclass Button extends Component {\n    constructor(props){\n        super(props);\n        this.choices = ['Currently reading','Want to read','read','none'];\n    }\n\n    handleButtonClick = (event) =>{\n        const button = event.target; \n        button.nextSibling.classList.toggle(\"show\")              \n    }\n\n    handleChoice = (event) => {\n        if(event.target.innerText !== this.props.shelf){\n            this.props.handleButtonChoice(event.target.innerText);\n        }\n    }\n\n    handleDropDownMenue = () => {\n        window.onclick = function(event) {\n            if (!event.target.matches('.dropdown-button')) {\n              var dropdowns = document.getElementsByClassName(\"dropdown-choices\");\n              var i;\n              for (i = 0; i < dropdowns.length; i++) {\n                var openDropdown = dropdowns[i];\n                if (openDropdown.classList.contains('show')) {\n                  openDropdown.classList.remove('show');\n                }\n              }\n            }\n        }\n    }\n\n    componentDidMount(){\n        this.handleDropDownMenue()\n    }\n    \n\n    render(){\n        return(\n            <div className=\"dropdown\">\n                <button className=\"dropdown-button\" onClick={this.handleButtonClick}>{this.props.shelf}</button> \n                 <div className=\"dropdown-choices\">\n                     {this.choices.map((choice) => (\n                         this.props.shelf === choice \n                         ? (<div key={choice} onClick={this.handleChoice} className=\"choice-active\">{choice}</div>)\n                         : (<div key={choice} onClick={this.handleChoice} >{choice}</div>)\n                     ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nButton.propTypes = {\n    shelf:PropTypes.string.isRequired,\n    handleButtonChoice:PropTypes.func.isRequired,\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/dashboard.scss';\nimport Rater from 'react-rater';\nimport Button from './Button'\n\nclass BookCard extends Component {\n\n    handleButtonChoice = (choice) => {\n        this.props.handleBookChange(choice, this.props.id);\n        const cards = document.querySelectorAll(\".bookCard-container\");\n                \n        for (let card of cards) {\n            if(card.textContent.includes(this.props.bookName) && card.textContent.includes(this.props.bookAuthor[0])){\n                card.style.opacity = \"0.3\";\n            }          \n        }\n    \n    }\n\n    render(){\n        return(\n            <div className=\"card-container\">\n                <div className=\"card-img\">\n                    <img src={this.props.bookImg} alt={this.props.bookName}></img>\n                </div>\n                <div className=\"card-info\">\n                    <p className=\"card-info__title\">{this.props.bookName}</p>\n                    <div className=\"card-info__author\">{this.props.bookAuthor.map((author) => (\n                       <p key={author}>{author}</p>  \n                    ))}\n                    </div>\n                    <Rater className=\"card-info__rating\" total={5} rating={this.props.avgRate} interactive={false}/>\n                    <Button shelf={this.props.shelf} handleButtonChoice={this.handleButtonChoice}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nBookCard.propTypes = {\n    id:PropTypes.string.isRequired,\n    shelf:PropTypes.string.isRequired,\n    handleBookChange:PropTypes.func.isRequired,\n    bookName:PropTypes.string.isRequired,\n    bookAuthor:PropTypes.array.isRequired,\n    bookImg:PropTypes.string.isRequired,\n    avgRate:PropTypes.number,\n}\n\nexport default BookCard;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport Swiper from 'swiper/js/swiper.esm.bundle';\nimport BookCard from '../bookCard';\n\n\n\nclass BookList extends Component {\n\n    componentDidMount() {\n        new Swiper(`.${this.props.shelf}-swiper-container`, \n            {\n                slidesPerView: 4,\n                spaceBetween: 20,\n                slidesPerView: 'auto',\n\n                navigation: {\n                    nextEl: `.control-section-action__next--${this.props.shelf}`,\n                    prevEl: `.control-section-action__back--${this.props.shelf}`,\n                  },\n            });\n    }\n\n    handleBookChange = (choice, bookID) => {\n        this.props.handleChangeBookShelf(choice, bookID);\n    }\n\n    render(){\n        return (\n            <div className={`${this.props.shelf}-swiper-container`}>\n            <div className=\"swiper-wrapper\">\n                {this.props.books.map((book) => (\n                    <div key={book.id} className=\"swiper-slide\">\n                        <div key={book.id} className=\"bookCard-container\">\n                            <BookCard \n                                handleBookChange={this.handleBookChange} \n                                id={book.id} \n                                bookName={book.title} \n                                bookAuthor={book.authors} \n                                bookImg={book.imageLinks.thumbnail} \n                                avgRate={book.averageRating} \n                                shelf={this.props.sectionName}\n                            />\n                        </div>\n                    </div>\n                ))}\n            </div>\n          </div>\n    \n        )\n    }\n}\n\n\nBookList.propTypes = {\n    shelf:PropTypes.string.isRequired,\n    books:PropTypes.array.isRequired,\n    handleChangeBookShelf:PropTypes.func.isRequired,\n    sectionName:PropTypes.string.isRequired,\n}\n\nexport default BookList;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport '../../styles/dashboard.scss'\nimport SectionControl from './sectionControl';\nimport BookList from './BookList'\n\nclass BookShelf extends Component {\n    shelfName = (choice) => {\n        const shelfName  = choice === '' ? this.props.name : choice;\n                \n        if(shelfName === 'Currently reading'){\n            return 'currentlyReading';\n        }else if(shelfName === 'Want to read'){\n            return 'wantToRead';\n        }else if(shelfName === 'read'){\n            return 'read';\n        }else{\n            return 'none';\n        }\n    }\n\n    handleChangeBookShelf = (choice,bookId) =>{\n        const shelf = this.shelfName(choice);\n        this.props.ChangeBookShelf(shelf,bookId);\n    }\n\n    render(){\n        return(\n            <div className={`${this.shelfName('')}-container`}>\n                <SectionControl shelf={this.shelfName('')} sectionName={this.props.name} numOfbook={this.props.books.length}/>\n                {this.props.books.length > 0 \n                    ?   (<BookList \n                            handleChangeBookShelf={this.handleChangeBookShelf} \n                            shelf={this.shelfName('')} \n                            sectionName={this.props.name} \n                            books={this.props.books}/>)\n                    :   (<p className=\"empty-message\">{`Shelf is Empty`}</p>)\n                }\n            </div>\n        )\n    }\n}\n\nBookShelf.propTypes = {\n    name:PropTypes.string.isRequired,\n    books:PropTypes.array.isRequired,\n    ChangeBookShelf:PropTypes.func.isRequired\n}\n\nexport default BookShelf;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport BookShelf from './bookShelf';\nimport '../../styles/dashboard.scss'\n\nclass Home extends Component {\n\n    currentlyReadingBooks = () => {\n        return this.props.books.filter((book) => (book.shelf === \"currentlyReading\"))\n    }\n    readBooks = () => {\n        return this.props.books.filter((book) => (book.shelf === \"read\"))\n    }\n    wantToReadBooks = () => {\n        return this.props.books.filter((book) => (\n            book.shelf === \"wantToRead\"\n        ))\n    }\n    ChangeBookShelf = (shelf,bookId) => {\n        this.props.updateBookShelf(shelf,bookId)\n    }\n\n    render(){\n        return (\n            <div className=\"db-container\">\n                <BookShelf name='Currently reading' books={this.currentlyReadingBooks()} ChangeBookShelf={this.ChangeBookShelf}/>\n                <BookShelf name='Want to read' books={this.wantToReadBooks()} ChangeBookShelf={this.ChangeBookShelf}/>\n                <BookShelf name='read' books={this.readBooks()} ChangeBookShelf={this.ChangeBookShelf}/>\n            </div>\n            \n        )\n    }\n}\n\nHome.propTypes = {\n    books:PropTypes.array.isRequired,\n    updateBookShelf:PropTypes.func.isRequired\n}\n\nexport default Home;","const api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)","import React from \"react\"\nimport ContentLoader from \"react-content-loader\" \n\nconst HomeLoader = () => (\n  <ContentLoader\n    height={320}\n\n  >\n    {/* <rect x=\"75\" y=\"13\" rx=\"4\" ry=\"4\" width=\"100\" height=\"13\" /> \n      */}\n\n      {/* row 1*/}\n    <rect x=\"14\" y=\"10\" rx=\"0\" ry=\"0\" width=\"70\" height=\"8\" />\n\n    <rect x=\"20\" y=\"25\" rx=\"3\" ry=\"3\" width=\"40\" height=\"60\" />\n    <rect x=\"15\" y=\"25\" rx=\"3\" ry=\"3\" width=\"100\" height=\"55\" />\n\n    <rect x=\"125\" y=\"25\" rx=\"3\" ry=\"3\" width=\"40\" height=\"60\" />\n    <rect x=\"120\" y=\"25\" rx=\"3\" ry=\"3\" width=\"100\" height=\"55\" />\n\n    <rect x=\"230\" y=\"25\" rx=\"3\" ry=\"3\" width=\"40\" height=\"60\" />\n    <rect x=\"225\" y=\"25\" rx=\"3\" ry=\"3\" width=\"100\" height=\"55\" />\n\n    <rect x=\"335\" y=\"25\" rx=\"3\" ry=\"3\" width=\"40\" height=\"60\" />\n    <rect x=\"330\" y=\"25\" rx=\"3\" ry=\"3\" width=\"100\" height=\"55\" />\n\n      {/* row 2*/}\n    <rect x=\"14\" y=\"105\" rx=\"4\" ry=\"0\" width=\"70\" height=\"8\" />\n\n    <rect x=\"20\" y=\"120\" rx=\"3\" ry=\"3\" width=\"40\" height=\"60\" />\n    <rect x=\"15\" y=\"120\" rx=\"3\" ry=\"3\" width=\"100\" height=\"55\" />\n\n    <rect x=\"125\" y=\"120\" rx=\"3\" ry=\"3\" width=\"40\" height=\"60\" />\n    <rect x=\"120\" y=\"120\" rx=\"3\" ry=\"3\" width=\"100\" height=\"55\" />\n\n    <rect x=\"230\" y=\"120\" rx=\"3\" ry=\"3\" width=\"40\" height=\"60\" />\n    <rect x=\"225\" y=\"120\" rx=\"3\" ry=\"3\" width=\"100\" height=\"55\" />\n\n    <rect x=\"335\" y=\"120\" rx=\"3\" ry=\"3\" width=\"40\" height=\"60\" />\n    <rect x=\"330\" y=\"120\" rx=\"3\" ry=\"3\" width=\"100\" height=\"55\" />\n\n    {/* row 3*/}\n    <rect x=\"14\" y=\"200\" rx=\"4\" ry=\"0\" width=\"70\" height=\"8\" />\n\n    <rect x=\"20\" y=\"215\" rx=\"3\" ry=\"3\" width=\"40\" height=\"60\" />\n    <rect x=\"15\" y=\"215\" rx=\"3\" ry=\"3\" width=\"100\" height=\"55\" />\n\n    <rect x=\"125\" y=\"215\" rx=\"3\" ry=\"3\" width=\"40\" height=\"60\" />\n    <rect x=\"120\" y=\"215\" rx=\"3\" ry=\"3\" width=\"100\" height=\"55\" />\n\n    <rect x=\"230\" y=\"215\" rx=\"3\" ry=\"3\" width=\"40\" height=\"60\" />\n    <rect x=\"225\" y=\"215\" rx=\"3\" ry=\"3\" width=\"100\" height=\"55\" />\n\n    <rect x=\"335\" y=\"215\" rx=\"3\" ry=\"3\" width=\"40\" height=\"60\" />\n    <rect x=\"330\" y=\"215\" rx=\"3\" ry=\"3\" width=\"100\" height=\"55\" />\n\n\n    \n  </ContentLoader>\n)\n\nexport default HomeLoader;","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport '../../styles/search.scss';\nimport searchIcon from '../../icons/search.svg';\nimport * as BookAPI from '../../utils/BooksAPI';\nimport BookCard from '../bookCard';\nimport searchImg from '../../icons/clip-education.png';\nimport searchError from '../../icons/clip-bad-gateaway.png';\nimport BookError from '../../icons/abstract-searching.png'\n\n\nclass Search extends Component {\n    state = {\n        query:'',\n        books:[],\n        requestError:false,\n    }\n\n    handleUserInput = (query) => {\n        this.setState({query: query});\n    }\n\n    getBooks = async (query) => {\n        const response = await BookAPI.search(query);\n        return response;\n    }\n\n    changeBookState = (books , requestState) => {\n        if(this.state.query){\n            this.setState({ \n                books: books,\n                requestError: requestState,\n            })\n        }\n    }\n\n    requestBook = async (event) => {\n        const query = event.target.value;\n        \n        this.handleUserInput(query);\n\n        if(query){\n            const response = await this.getBooks(query);            \n            if(response.error){\n                this.changeBookState([], true);\n            }else{\n                this.changeBookState(response, false);\n            }\n        }else{\n            this.changeBookState([], false);\n        }\n    }\n\n    getBookShelf = (BookId) => {\n        const booksOntheShelf = this.props.books;\n        let shelf = '';\n        for (let i = 0; i < booksOntheShelf.length; i++) {\n            if(booksOntheShelf[i].shelf === 'wantToRead' && booksOntheShelf[i].id === BookId){\n                shelf = 'Want to read';\n                break;\n            }else if(booksOntheShelf[i].shelf === 'currentlyReading' && booksOntheShelf[i].id === BookId){\n                shelf = 'Currently reading';\n                break;\n            }else if(booksOntheShelf[i].shelf === 'read' && booksOntheShelf[i].id === BookId){\n                shelf = 'read';\n                break;\n            }else{\n                shelf = 'none';\n            }\n            \n        }\n            \n        return shelf;\n        // for (let i = 0; i < searchBooks.length; i++) {\n        //     for (let j = 0; j < booksOntheShelf.length; j++) {\n        //         if(booksOntheShelf[j].shelf === \"wantToRead\" && booksOntheShelf[j].id === searchBooks[i].id){\n        //             console.log(booksOntheShelf[j]);\n        //             return 'Want to read';\n        //         }// }else if(booksOntheShelf[j].id === searchBooks[i].id && booksOntheShelf[j].shelf === \"currentlyReading\"){\n        //         //     return 'Currently reading';\n        //         // }else if(booksOntheShelf[j].id === searchBooks[i].id && booksOntheShelf[j].shelf === \"read\"){\n        //         //     return 'read';\n        //         // }else {\n        //         //     return 'none'\n        //         // }             \n        //     }\n            \n        // }\n    }\n\n    handleBookChange = (choice,bookId) => {\n        let shelf = '';\n        if(choice === 'Currently reading'){\n            shelf = 'currentlyReading'\n        }else if(choice === 'Want to read'){\n            shelf = 'wantToRead'\n        }else if(choice === 'read'){\n            shelf = 'read'\n        }else {\n            shelf = 'none'\n        }\n        this.props.updateBookShelf(shelf,bookId)\n    }\n\n    render(){\n        return (\n            <div className=\"search-container\">\n                <div className=\"search-bar-container\">\n                    <input className=\"search-bar\"\n                    type=\"text\" placeholder=\"Search\"\n                    value={this.state.query}\n                    onChange={this.requestBook}\n                    />\n                    <img src={searchIcon} alt=\"search icon\" className=\"search-bar-icon\"></img>\n                </div>\n                {\n                    !this.state.query && (\n                                        <div>\n                                            <img src={searchImg} alt='searchImg' className=\"search-Img\"></img>\n                                            <p>Meet your next <span>Book</span> </p>\n                                        </div>)\n                }\n                \n                {\n                    !this.state.requestError ?\n                        <div className=\"books-container\">\n                            {\n                                \n                                this.state.query && (this.state.books.map((book) => (                                                        \n                                    <BookCard\n                                    key={book.id}\n                                    id={book.id}  \n                                    bookImg={book.imageLinks ? book.imageLinks.thumbnail : BookError} \n                                    bookName={book.title}\n                                    bookAuthor={book.authors ? book.authors : ['author: not available']}\n                                    avgRate={book.averageRating ? book.averageRating : 0}\n                                    shelf={this.getBookShelf(book.id)}\n                                    handleBookChange={this.handleBookChange}\n                                    />\n                                ))) \n                            }\n                        </div>\n                    :   (<div>\n                            <img src={searchError} alt='searchError' className=\"search-Error\"></img>\n                            <p>Sorry we couldn't find any matches for <span>{this.state.query}</span></p>\n                        </div>\n                        )\n\n                }\n            </div>\n        )\n    }\n}\n\nSearch.propTypes = {\n    books:PropTypes.array.isRequired,\n    updateBookShelf:PropTypes.func.isRequired\n}\n\n\nexport default Search;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../../styles/shelf.scss';\n\n\nclass ShelfButton extends Component {\n\n    handleButtonClick = (event) =>{\n        const button = event.target; \n        button.nextSibling.classList.toggle(\"show\")              \n    }\n\n    handleChoice = (event) => {\n        if(event.target.innerText !== this.props.shelf){\n            this.props.handleButtonChoice(event.target.innerText);\n        }\n    }\n\n    handleDropDownMenues = () => {\n        window.onclick = function(event) {\n            if (!event.target.matches('.shelf-dropdown-button') && !event.target.matches('.dropdown-button')) {\n              var dropdowns = document.getElementsByClassName(\"dropdown-choices\");              \n              var i;\n              for (i = 0; i < dropdowns.length; i++) {\n                var openDropdown = dropdowns[i];\n                if (openDropdown.classList.contains('show')) {\n                  openDropdown.classList.remove('show');\n                }\n              }\n            }\n        }\n    }\n\n    componentDidMount(){\n        document.addEventListener('click', this.handleDropDownMenues);\n    }\n\n    componentWillUnmount(){\n        document.removeEventListener('click', this.handleDropDownMenues);\n    }\n    \n\n    render(){\n        return(\n            <div className=\"shelf-dropdown\">\n                <button className=\"shelf-dropdown-button\" onClick={this.handleButtonClick}>{this.props.catagory}</button> \n                 <div className=\"dropdown-choices\">\n                     {this.props.catagories.map((choice) => (\n                         this.props.shelf === choice \n                         ? (<div key={choice} onClick={this.handleChoice} className=\"choice-active\">{choice}</div>)\n                         : (<div key={choice} onClick={this.handleChoice} >{choice}</div>)\n                     ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nShelfButton.propTypes = {\n    catagory:PropTypes.string.isRequired,\n    catagories:PropTypes.array.isRequired,\n    handleButtonChoice:PropTypes.func.isRequired,\n}\n\nexport default ShelfButton;","import React, { Component } from \"react\";\nimport PropTypes from 'prop-types';\nimport '../../styles/shelf.scss';\nimport BookCard from '../bookCard';\nimport SectionControl from '../Home/sectionControl';\nimport ShelfButton from './shelfButton';\nimport BookError from '../../icons/abstract-searching.png'\n\n\n\nclass Shelf extends Component {\n    state = {\n        catagory: 'All'\n    }\n\n    handleCatagoryChange = (choice) => {\n        this.changeCatagoryState(choice);\n        this.showBooksByCatagory(choice);\n    }\n\n    showBooksByCatagory = (choice) => {\n        const books = this.props.books;\n        const categoriesedBooks = []\n        if(choice !== 'All'){\n        books.map((book) => {\n            let categories = book.categories;\n            if(categories){                \n                categories.map((catagory) => {\n                    if(catagory.toLowerCase() === choice){                        \n                        categoriesedBooks.push(book);\n                    }\n                })\n            }\n        })\n            return categoriesedBooks;\n        }else{\n            return books;\n        }\n    }\n\n    requestBook = async (event) => {\n        const choice = event.target.value;\n        this.handleUserChoice(choice);\n    }\n\n    getBookShelf = (BookId) => {\n        const booksOntheShelf = this.props.books;\n        let shelf = '';\n        for (let i = 0; i < booksOntheShelf.length; i++) {\n            if(booksOntheShelf[i].shelf === 'wantToRead' && booksOntheShelf[i].id === BookId){\n                shelf = 'Want to read';\n                break;\n            }else if(booksOntheShelf[i].shelf === 'currentlyReading' && booksOntheShelf[i].id === BookId){\n                shelf = 'Currently reading';\n                break;\n            }else if(booksOntheShelf[i].shelf === 'read' && booksOntheShelf[i].id === BookId){\n                shelf = 'read';\n                break;\n            }else{\n                shelf = 'none';\n            }\n            \n        }\n            \n        return shelf;\n        // for (let i = 0; i < searchBooks.length; i++) {\n        //     for (let j = 0; j < booksOntheShelf.length; j++) {\n        //         if(booksOntheShelf[j].shelf === \"wantToRead\" && booksOntheShelf[j].id === searchBooks[i].id){\n        //             console.log(booksOntheShelf[j]);\n        //             return 'Want to read';\n        //         }// }else if(booksOntheShelf[j].id === searchBooks[i].id && booksOntheShelf[j].shelf === \"currentlyReading\"){\n        //         //     return 'Currently reading';\n        //         // }else if(booksOntheShelf[j].id === searchBooks[i].id && booksOntheShelf[j].shelf === \"read\"){\n        //         //     return 'read';\n        //         // }else {\n        //         //     return 'none'\n        //         // }             \n        //     }\n            \n        // }\n    }\n\n    handleBookChange = (choice,bookId) => {\n        let shelf = '';\n        if(choice === 'Currently reading'){\n            shelf = 'currentlyReading'\n        }else if(choice === 'Want to read'){\n            shelf = 'wantToRead'\n        }else if(choice === 'read'){\n            shelf = 'read'\n        }else {\n            shelf = 'none'\n        }\n        this.props.updateBookShelf(shelf,bookId)\n    }\n\n    shelfCatagories = () =>{\n        const cat = ['All'];\n        const books = this.props.books;\n        for (let index = 0; index < books.length; index++) {\n            let catagories = books[index].categories;\n            if(catagories){\n                catagories.map((catagory) => {\n                    if((cat.indexOf(catagory.toLowerCase()) === -1)){\n                        cat.push(catagory.toLowerCase());\n                    }\n                });\n            }\n        }\n        \n        return cat;\n    }\n\n    changeCatagoryState(choice) {\n        this.setState({\n            catagory: choice,\n        });\n    }\n\n    render(){\n        return (\n            <div className=\"shelf-container\">\n                <div className=\"shelf-top\">\n                    <SectionControl sectionName={this.props.shelfName} numOfbook={this.props.numOfBooks}/>\n                    <div className=\"shelf-button\">\n                        <ShelfButton \n                            catagory={this.state.catagory} \n                            catagories={this.shelfCatagories()} \n                            handleButtonChoice={this.handleCatagoryChange} \n                        />\n                    </div>\n                </div>\n\n                <div className=\"books-container shelf\">\n                    {\n\n                        this.showBooksByCatagory(this.state.catagory).length > 0 ?\n                        this.showBooksByCatagory(this.state.catagory).map((book) => (\n                            <BookCard\n                                key={book.id}\n                                id={book.id}  \n                                bookImg={book.imageLinks ? book.imageLinks.thumbnail : BookError} \n                                bookName={book.title}\n                                bookAuthor={book.authors ? book.authors : ['author: not available']}\n                                avgRate={book.averageRating ? book.averageRating : 0}\n                                shelf={this.getBookShelf(book.id)}\n                                handleBookChange={this.handleBookChange}\n                            />\n                        ))\n                        : <p className=\"shelf-empty\">Shelf is Empty</p>\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nShelf.propTypes = {\n    books:PropTypes.array.isRequired,\n    updateBookShelf:PropTypes.func.isRequired,\n    shelfName:PropTypes.string.isRequired,\n    numOfBooks:PropTypes.number.isRequired,\n}\n\nexport default Shelf;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport Home from './Home/home';\nimport * as BooksAPI from '../utils/BooksAPI';\nimport HomeLoader from './Home/homeLoader';\nimport Search from './Search/search'\nimport Shelf from './shelf/shelf';\nimport '../styles/content.scss'\n\n\n\nclass Content extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            books:[],\n            hasContent:false,\n        }\n    }\n\n    componentDidMount(){\n       this.getAllBooks()   \n    }\n\n    getAllBooks = () => {\n        BooksAPI.getAll()\n        .then((books) => {\n            this.setState({\n                books:[...books],\n                hasContent:true,\n            })            \n        }) \n    }\n\n    getBook = async (bookId) => {\n       const response = await BooksAPI.get(bookId);\n       return response;\n    }\n\n    updateBook = (book,shelf) => {\n        BooksAPI.update(book, shelf)\n        .then(() => {\n            this.getAllBooks();\n        })\n    }\n\n    updateBookShelf = async (shelf , bookId) => {\n        const book = await this.getBook(bookId);        \n        this.updateBook(book,shelf);\n    }\n    \n    getShelfBooks = (shelf) => {\n        return this.state.books.filter(book => (\n            book.shelf === shelf\n        ))\n    }\n\n    render(){        \n        return(\n            <div className=\"content\">\n                <Route exact path='/' render ={() => (\n                    <div>\n                        {this.state.hasContent ? (\n                            <Home books={this.state.books} updateBookShelf={this.updateBookShelf}/>\n                        ):(\n                            <HomeLoader />\n                        )}\n                    </div>\n                    \n                )} />\n\n                <Route   path='/search' render ={() => (\n                    <Search books={this.state.books} updateBookShelf={this.updateBookShelf}/>\n                )} />\n\n                <Route  path='/currently-reading' render ={() => (\n                    <Shelf \n                        shelfName='Currently reading' \n                        numOfBooks={this.getShelfBooks('currentlyReading').length}\n                        books={this.getShelfBooks('currentlyReading')}\n                        updateBookShelf={this.updateBookShelf}\n                    />\n                )} />\n\n                <Route  path='/want-To-Read'  render ={() => (\n                    <Shelf \n                    shelfName='Want to read' \n                    numOfBooks={this.getShelfBooks('wantToRead').length}\n                    books={this.getShelfBooks('wantToRead')}\n                    updateBookShelf={this.updateBookShelf}\n                    />\n                )} />\n\n                <Route  path='/read' render ={() => (\n                    <Shelf \n                    shelfName='Read' \n                    numOfBooks={this.getShelfBooks('read').length}\n                    books={this.getShelfBooks('read')}\n                    updateBookShelf={this.updateBookShelf}\n                    />\n                )} />\n            </div>\n\n        );\n    }\n}\n\nexport default Content;","import React, { Component } from 'react';\nimport Navigation from './Navigation';\nimport Content from './Content'\n\n\nimport '../styles/App.scss';\n\nclass App extends Component {\n  render(){\n    return (\n      <main className=\"container\">\n        <Navigation />\n        <Content />\n      </main>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { BrowserRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n    </BrowserRouter>\n    ,document.getElementById('root')\n);\n\n\n\n// reviews\n\n// Dear excellent student,\n\n// You have done amazing work! After launching your \n// project I was shocked and amazed that someone has worked outside \n// box and shown their creativity. I really liked your project and your \n// creativity. The theme is really good and user friendly. User experience \n// is really great and I enjoyed reviewing your project. However I feel bad \n// to inform you that you have not passed the project at the moment. Unfortunately \n// there are some errors and missing requirements. I have pointed out your missing \n// requirements and suggested how to fix them. Please go over them and update your \n// project with fixes and resubmit the project.\n// If you have any question or doubt I recommend you to reach out to \n// your mentor as I understand that rubrics requirements or my \n// comments may not be easy to understand. I wish you good luck for the project.\n// Keep learning and stay Udacious \n\n\n\n\n// Great job, you made it, congrats\n// I love the creative UI design especially the swiper/carousel component\n// Do you want to take the project to the next level later as a practice?\n// Consider deploying it to a static web host like AWS, Netlify or Github Pages.\n// you can also add popular features like book preview, sharing on social media, recording progress and so on.\n// I'm sure you can come up with better ones and implement them all"],"sourceRoot":""}